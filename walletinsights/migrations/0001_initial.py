# Generated by Django 4.0.10 on 2023-10-18 12:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eveonline', '0017_alliance_and_corp_names_are_not_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('access_walletinsights', 'Allows access to the WalletInsights module.'), ('all_corp_access', 'Allows access to wallet data for all corps.'), ('add_wallet_owner', 'Can add a wallet owner.')),
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Determines if the corp wallets for this owner will be updated in the sync task.', verbose_name='is active')),
                ('balances_last_updated', models.DateTimeField(blank=True, default=None, help_text='the last date and time that wallet balances were updated.', null=True, verbose_name='balances last updated')),
                ('journals_last_updated', models.DateTimeField(blank=True, default=None, help_text='the last date and time that the journals were updated', null=True, verbose_name='journals last updated')),
                ('corp', models.ForeignKey(help_text='Corporation that owns wallets.', on_delete=django.db.models.deletion.CASCADE, related_name='wallet_owner', to='eveonline.evecorporationinfo', verbose_name='corporation')),
            ],
            options={
                'verbose_name': 'owner',
                'verbose_name_plural': 'owners',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='WalletDivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division_id', models.SmallIntegerField()),
                ('division_name', models.CharField(max_length=100)),
                ('corp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='walletinsights.owner')),
            ],
            options={
                'verbose_name': 'wallet division',
                'verbose_name_plural': 'wallet divisions',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='WalletJournalEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('context_id', models.BigIntegerField(null=True)),
                ('context_id_type', models.CharField(max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('description', models.CharField(max_length=500)),
                ('first_party_id', models.IntegerField(null=True)),
                ('entry_id', models.BigIntegerField()),
                ('reason', models.CharField(max_length=500, null=True)),
                ('ref_type', models.CharField(max_length=72)),
                ('second_party_id', models.IntegerField(null=True)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('tax_receiver_id', models.IntegerField(null=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='walletinsights.walletdivision')),
            ],
            options={
                'verbose_name': 'wallet journal entry',
                'verbose_name_plural': 'wallet journal entries',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='WalletBalanceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=20)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='walletinsights.walletdivision')),
            ],
            options={
                'verbose_name': 'wallet balance record',
                'verbose_name_plural': 'wallet balance records',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OwnerCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_used', models.DateTimeField(db_index=True, default=None, editable=False, help_text='the last time this character was used for syncing', null=True, verbose_name='last used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('character', models.ForeignKey(help_text='character used for syncing', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='eveonline.evecharacter', verbose_name='character')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='walletinsights.owner', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'owner character',
                'verbose_name_plural': 'owner characters',
                'default_permissions': (),
            },
        ),
        migrations.AddIndex(
            model_name='walletdivision',
            index=models.Index(fields=['corp_id', 'division_id'], name='corp_division_id_idx'),
        ),
        migrations.AddIndex(
            model_name='walletdivision',
            index=models.Index(fields=['division_id', 'division_name'], name='division_division_name_idx'),
        ),
        migrations.AddIndex(
            model_name='walletdivision',
            index=models.Index(fields=['corp_id', 'division_name'], name='corp_division_name_idx'),
        ),
        migrations.AddIndex(
            model_name='walletdivision',
            index=models.Index(fields=['corp_id'], name='corp_id_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='walletdivision',
            unique_together={('corp_id', 'division_id')},
        ),
    ]
